<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>io.github.algorys</groupId>
	<artifactId>maventest</artifactId>
	<version>0.0.1</version>
	<packaging>jar</packaging>

	<name>maventest</name>
	<url>http://maven.apache.org</url>

	<scm>
		<url>https://github.com/algorys/maventest.git</url>
		<connection>scm:git:git@github.com:algorys/maventest.git</connection>
		<developerConnection>scm:git:git@github.com:algorys/maventest.git</developerConnection>
	  <tag>maventest-0.0.1</tag>
  </scm>

	<issueManagement>
		<system>github</system>
		<url>https://github.com/algorys/maventest/issues</url>
	</issueManagement>

	<developers>
		<developer>
			<name>Matt</name>
			<url>https://github.com/algorys</url>
		</developer>
	</developers>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- github server corresponds to entry in ~/.m2/settings.xml -->
		<github.global.server>github</github.global.server>
	</properties>
	<distributionManagement>
		<repository>
			<id>internal.repo</id>
			<name>Temporary Staging Repository</name>
			<url>file://${project.build.directory}/mvn-repo</url>
		</repository>
	</distributionManagement>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.8.1</version>
				<configuration>
					<altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.5.3</version>
			</plugin>
			<plugin>
				<groupId>de.jutzig</groupId>
				<artifactId>github-release-plugin</artifactId>
				<version>1.1.1</version>
				<configuration>
					<description>Description of your release</description>
					<releaseName>${project.scm.tag}</releaseName>
					<tag>${project.version}</tag>

					<!-- If your project has additional artifacts, such as ones produced 
						by the maven-assembly-plugin, you can define the following (requires version 
						1.1.1 of the plugin or higher): -->
					<fileSets>
						<fileSet>
							<directory>${project.build.directory}</directory>
							<includes>
								<include>${project.artifactId}*.tar.gz</include>
								<include>${project.artifactId}*.zip</include>
								<include>${project.artifactId}*.jar</include>
							</includes>
						</fileSet>
					</fileSets>
				</configuration>
				<executions>
					<execution>
						<phase>deploy</phase>
						<goals>
							<goal>release</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.github.github</groupId>
				<artifactId>site-maven-plugin</artifactId>
				<version>0.12</version>
				<configuration>
					<message>Maven artifacts for ${project.version}</message>  <!-- git commit message -->
					<noJekyll>true</noJekyll>                                  <!-- disable webpage processing -->
					<outputDirectory>${project.build.directory}/mvn-repo</outputDirectory> <!-- matches distribution management repository url above -->
					<branch>refs/heads/mvn-repo</branch>                       <!-- remote branch name -->
					<includes>
						<include>**/*</include>
					</includes>
					<repositoryName>maventest</repositoryName>      <!-- github repo name -->
					<repositoryOwner>algorys</repositoryOwner>    <!-- github username -->
					<merge>true</merge>
					
				</configuration>
				<executions>
					<!-- run site-maven-plugin's 'site' target as part of the build's normal 
						'deploy' phase -->
					<execution>
						<goals>
							<goal>site</goal>
						</goals>
						<phase>deploy</phase>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
</project>
